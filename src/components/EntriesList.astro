---
import i18next, { t } from "i18next";
import { useStoryblokApi } from "@storyblok/astro";
import { getStoryLocalizedPath, getVersion } from "../utils/functions";
import { getYear } from "../utils/functions";
import Breadcrumbs from "./Breadcrumbs.astro";
import Link from "./Link.astro";
import StoryblokImage from "./StoryblokImage.astro";

const storyblokApi = useStoryblokApi();

const { slug, blok } = Astro.props;

const {
  data: { stories },
} = await storyblokApi.get(
  `cdn/stories?starts_with=${slug}&sort_by=published_at:asc&language=${i18next.language}`,
  {
    version: getVersion(),
  }
);

// Display stories and folders that are in current folder
const root = stories.find((s) => slug.includes(s.slug));
const level = root.full_slug.split("/").length - 1;
const storiesInRoot = stories
  .filter(
    (s) =>
      s !== root && s.full_slug.split("/").filter((s) => s).length === level + 1
  )
  .map((s) => ({ ...s, ...getStoryLocalizedPath(s) }));

const defaultImage = blok.defaultImage.filename
  ? blok.defaultImage
  : storiesInRoot[0].content.entries?.[0];
---

<div class="container">
  <section class="container__nav">
    <Breadcrumbs {...Astro.props} />

    <ul class="linkList">
      {
        storiesInRoot.map((s, i) => (
          <li class="linkList__elem">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="25"
              height="50"
              viewBox="0 0 25 50"
              fill="none"
              stroke="var(--secondary)"
              stroke-width="1.5"
            >
              <line
                x1="1"
                y1="25"
                x2="25"
                y2="25"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <line
                x1="1"
                y1="1"
                x2="1"
                y2={i < storiesInRoot.length - 1 ? 50 : 25}
              />
            </svg>
            <Link href={`/${s.localizedSlug}`} className="linkList__link">
              {s.name} - {getYear(s.content.year)}
            </Link>
          </li>
        ))
      }
    </ul>
  </section>

  {
    defaultImage && (
      <StoryblokImage aspectRatio="1/1" blok={defaultImage} preload={true} />
    )
  }
</div>

<style lang="scss">
  .container {
    @media screen and (min-width: 732px) {
      display: grid;
      grid-template-columns: 1fr 2fr;
      justify-items: flex-end;
    }

    &__nav {
      width: 100%;
      justify-self: flex-start;
    }

    &__picture {
      width: 100%;
      height: auto;
      aspect-ratio: 1/1;
      object-fit: cover;
      object-position: right;
    }
  }

  .linkList {
    margin: 0;
    padding: 0;
    list-style: none;

    &__elem {
      display: grid;
      grid-template-columns: auto 1fr;
      height: 48px;
      align-items: center;
      gap: 0 var(--space-3xs);
    }
    &__link {
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
    }
  }
</style>
