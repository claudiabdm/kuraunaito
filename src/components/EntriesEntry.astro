---
import { storyblokEditable } from "@storyblok/astro";
import { Carousel, Photo } from "astro-carousel";
import Breadcrumbs from "./Breadcrumbs.astro";
import type { ComponentProps } from "astro/types";
import { getSize } from "../utils/functions";

const { blok, breadcrumbs } = Astro.props;
const { path } = Astro.params;

const images: ComponentProps<typeof Carousel>["images"] = (
  blok.entries ?? []
).map((img) => ({
  src: img.filename,
  alt: img.alt ?? "",
  width: getSize(img.filename).width,
  widths: [360, 720, 1280],
  height: getSize(img.filename).height,
  format: "webp",
}));
const imagesGrid = images.map((img, i) => ({
  ...img,
  widths: [360, 540, 720],
  loading: i < 3 ? "eager" : "lazy",
  "data-carousel-index": i,
}));
---

<Carousel images={images} />

<div class="entry">
  <Breadcrumbs breadcrumbs={breadcrumbs} />
  <ul
    class="entry__entries"
    {...storyblokEditable(blok)}
    id="carouselTargetList"
  >
    {
      imagesGrid.map((img, i) => {
        return (
          <li class="entry__elem">
            <a
              href={`/${path}?image=${i}`}
              data-carousel-index={i}
              class="entry__link"
              aria-label={`Open image ${img.title || i}`}
            >
              <Photo {...img} />
            </a>
          </li>
        );
      })
    }
  </ul>
</div>

<style lang="scss" is:global>
  .entry {
    display: grid;
    gap: var(--space-s-m);
    padding-bottom: var(--space-s-m);
    &__entries {
      display: grid;
      gap: var(--space-m);
      margin: 0;
      padding: 0;
      list-style: none;

      @media screen and (min-width: 732px) {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        grid-auto-rows: var(--maxHeight);
        gap: var(--space-xl);
        align-items: center;
      }
    }

    &__elem {
      &:hover {
        cursor: pointer;
      }
    }

    &__link {
      display: block;
    }
  }
</style>
